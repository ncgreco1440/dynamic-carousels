/*
Recreating the border-box as a mixin function
*/

@mixin border-box {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
 /*
 placeholder selector (%)
 The placeholder selector allows us to define whole chunks of style which only 
 get output when we extend them elsewhere.
 */
%clearfix {
    *zoom: 1;
    &:before,
        &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

/*
Box-shadow takes 2 params, shadow 1 and shadow 2, but shadow 2 is optional.
It takes shadow 1 and passes in everything written and assigns those values.
If shadow 2 is also passed in the $params variable changes accordingly and 
the values are assigned all the same. 
*/
@mixin box-shadow($shadow1, $shadow2:false) {
    $params: $shadow1;
    @if $shadow2 {
        $params: $shadow1, $shadow2;
    }
    -webkit-box-shadow: $params;
    -moz-box-shadow: $params;
    box-shadow: $params;
}

@mixin text-shadow($shadow1, $shadow2:false) {
    $params: $shadow1;
    @if $shadow2 {
        $params: $shadow1, $shadow2;
    }
    -webkit-text-shadow: $params;
    -moz-text-shadow: $params;
    text-shadow: $params;
}

@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    transition: $transition;
}

@mixin transform($transform) {
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    transform: $transform;
}

@mixin animation($animation){
    -webkit-animation: $animation;
    -moz-animation: $animation;
    animation: $animation;
}

@mixin perspective($perspective) {
    -webkit-perspective: $perspective;
    -moz-perspective: $perspective;
    -ms-perspective: $perspective;
    perspective: $perspective;
}

@function pi() {
  @return 3.14159265359;
}

@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  // If the angle has 'deg' as unit, convert to radians.
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}

@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}

@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  // Iterate a bunch of times.
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}

@function tan($angle) {
  @return sin($angle) / cos($angle);
}